PCHInclude("pyste/common_includes.hpp")
Import("../boost/noncopyable.pyste")
Include("ace/Time_Value.h")
Include("ace/Inet_Addr.h")

execfile("src/pyste/boost/signals/utils.py")

def export_proactor_signal(signal_type, override_call):
    return export_signal(signal_type, "pyasynchio/Proactor.hpp", override_call)

sigs = [("pyasynchio::AcceptCompleteSignal", True)
, ("pyasynchio::ValidateAcceptSignal", False)
, ("pyasynchio::AcceptStreamSignal", True)
, ("pyasynchio::ConnectCompleteSignal", True)
, ("pyasynchio::ValidateConnectSignal", False)
, ("pyasynchio::ConnectStreamSignal", True)
, ("pyasynchio::AddressesSignal", True)
, ("pyasynchio::ActSignal", True)
, ("pyasynchio::OpenSignal", True)
, ("pyasynchio::ReadStreamSignal", True)
, ("pyasynchio::WriteStreamSignal", True) 
, ("pyasynchio::TimerSignalBase", True)]

for s in sigs:
    export_proactor_signal(s[0], s[1])

use_shared_ptr(export_proactor_signal("pyasynchio::TimerSignal", True))
